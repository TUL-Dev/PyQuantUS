[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "pyquantus"
version = "0.0.1"
authors = [
    { name = "David Spector", email = "davidspector9@gmail.com" }
]

description = "Quantitative Ultrasound for Python"
readme = "README.md"
requires-python = ">=3.10.0"

classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
]
dependencies = [
    "appdirs>=1.4.4",
    "contourpy>=1.1.0",
    "cycler>=0.11.0",
    "et-xmlfile>=1.1.0",
    "fonttools>=4.42.1",
    "gdown>=5.1.0",
    "h5py>=3.9.0",
    "imageio>=2.31.1",
    "joblib>=1.3.2",
    "kiwisolver>=1.4.5",
    "mat73>=0.60",
    "matplotlib>=3.6.2",
    "matplotlib-inline>=0.1.3",
    "numpy>=1.23.0",
    "networkx>=3.1",
    "opencv-python-headless>=4.8.0.76",
    "openpyxl>=3.0.10",
    "packaging>=23.1",
    "pandas>=1.4.3",
    "Pillow>=9.2.0",
    "pydicom>=2.4.1",
    "pyparsing>=3.1.1",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
    "pyvista>=0.36.1",
    "PyWavelets>=1.4.1",
    "PyYAML>=6.0.2",
    "scikit-image>=0.19.3",
    "scikit-learn>=1.1.1",
    "scipy>=1.11.3",
    "scooby>=0.7.2",
    "six>=1.16.0",
    "scikit-learn",
    "threadpoolctl>=3.2.0",
    "tifffile>=2023.8.12",
    "tqdm>=4.66.2",
    "traitlets>=5.9.0",
    "typing_extensions>=4.11.0",
    "vtk>=9.2.6"
]

#TODO: Add optional dev dependencies for sphinx and testing

[project.urls]
"Source" = "https://github.com/TUL-Dev/PyQuantUS"

[project.scripts]
pyquantus-parse = "pyquantus.cli.pyquantus_parse:main"

[project.entry-points."pyquantus_parse.parsers"]
canon_iq = "pyquantus.cli.parse.parsers:parseCanonIq"
siemens_rf = "pyquantus.cli.parse.parsers:parseSiemensRf"
terason_rf = "pyquantus.cli.parse.parsers:parseTerasonRf"
clarius_rf = "pyquantus.cli.parse.parsers:parseClariusRf"

[project.entry-points."pyquantus_parse.roi_loaders"]
pkl_roi = "pyquantus.cli.parse.load_roi:load_pkl_roi"
pkl_roi_assert_scan = "pyquantus.cli.parse.load_roi:load_roi_assert_scan"
pkl_roi_assert_scan_phantom = "pyquantus.cli.parse.load_roi:load_roi_assert_scan_phantom"

[project.entry-points."pyquantus_parse.analysis_config_loaders"]
pkl_config = "pyquantus.cli.parse.load_configs:load_pkl_analysis"
pkl_config_assert_phantom = "pyquantus.cli.parse.load_configs:load_analysis_assert_phantom"
pkl_config_assert_scan_phantom = "pyquantus.cli.parse.load_configs:load_analysis_assert_scan_phantom"

[tool.setuptools]
ext-modules = [
  {name = "philipsRfParser", sources = ["pyquantus/parse/philips_rf_parser.c"]},
]

[tool.setuptools.packages.find]
where = ["."]
include = ["pyquantus*"]
